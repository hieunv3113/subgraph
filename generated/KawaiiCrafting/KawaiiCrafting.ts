// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Crafting extends ethereum.Event {
  get params(): Crafting__Params {
    return new Crafting__Params(this);
  }
}

export class Crafting__Params {
  _event: Crafting;

  constructor(event: Crafting) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Fee extends ethereum.Event {
  get params(): Fee__Params {
    return new Fee__Params(this);
  }
}

export class Fee__Params {
  _event: Fee;

  constructor(event: Fee) {
    this._event = event;
  }

  get min(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get max(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Pause extends ethereum.Event {
  get params(): Pause__Params {
    return new Pause__Params(this);
  }
}

export class Pause__Params {
  _event: Pause;

  constructor(event: Pause) {
    this._event = event;
  }
}

export class Unpause extends ethereum.Event {
  get params(): Unpause__Params {
    return new Unpause__Params(this);
  }
}

export class Unpause__Params {
  _event: Unpause;

  constructor(event: Unpause) {
    this._event = event;
  }
}

export class KawaiiCrafting extends ethereum.SmartContract {
  static bind(address: Address): KawaiiCrafting {
    return new KawaiiCrafting("KawaiiCrafting", address);
  }

  CRAFTING_HASH(): Bytes {
    let result = super.call("CRAFTING_HASH", "CRAFTING_HASH():(bytes32)", []);

    return result[0].toBytes();
  }

  try_CRAFTING_HASH(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CRAFTING_HASH",
      "CRAFTING_HASH():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DOMAIN_SEPARATOR(): Bytes {
    let result = super.call(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DOMAIN_SEPARATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  NAME(): string {
    let result = super.call("NAME", "NAME():(string)", []);

    return result[0].toString();
  }

  try_NAME(): ethereum.CallResult<string> {
    let result = super.tryCall("NAME", "NAME():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", "isOwner():(bool)", []);

    return result[0].toBoolean();
  }

  try_isOwner(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isSigner(param0: Address): boolean {
    let result = super.call("isSigner", "isSigner(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isSigner(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isSigner", "isSigner(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  kawaiiDelivery(): Address {
    let result = super.call("kawaiiDelivery", "kawaiiDelivery():(address)", []);

    return result[0].toAddress();
  }

  try_kawaiiDelivery(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "kawaiiDelivery",
      "kawaiiDelivery():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  kawaiiRandomness(): Address {
    let result = super.call(
      "kawaiiRandomness",
      "kawaiiRandomness():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_kawaiiRandomness(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "kawaiiRandomness",
      "kawaiiRandomness():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  kawaiiToken(): Address {
    let result = super.call("kawaiiToken", "kawaiiToken():(address)", []);

    return result[0].toAddress();
  }

  try_kawaiiToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("kawaiiToken", "kawaiiToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  maxFee(): BigInt {
    let result = super.call("maxFee", "maxFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxFee", "maxFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  minFee(): BigInt {
    let result = super.call("minFee", "minFee():(uint256)", []);

    return result[0].toBigInt();
  }

  try_minFee(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("minFee", "minFee():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nonces(param0: Address): BigInt {
    let result = super.call("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_nonces(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nonces", "nonces(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  permitDoubleSpending(param0: Bytes): boolean {
    let result = super.call(
      "permitDoubleSpending",
      "permitDoubleSpending(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toBoolean();
  }

  try_permitDoubleSpending(param0: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "permitDoubleSpending",
      "permitDoubleSpending(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _kawaiiToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _kawaiiRandomness(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _kawaiiDelivery(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _minFee(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _maxFee(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class CraftingItemCall extends ethereum.Call {
  get inputs(): CraftingItemCall__Inputs {
    return new CraftingItemCall__Inputs(this);
  }

  get outputs(): CraftingItemCall__Outputs {
    return new CraftingItemCall__Outputs(this);
  }
}

export class CraftingItemCall__Inputs {
  _call: CraftingItemCall;

  constructor(call: CraftingItemCall) {
    this._call = call;
  }

  get data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CraftingItemCall__Outputs {
  _call: CraftingItemCall;

  constructor(call: CraftingItemCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetKawaiiRandomnessCall extends ethereum.Call {
  get inputs(): SetKawaiiRandomnessCall__Inputs {
    return new SetKawaiiRandomnessCall__Inputs(this);
  }

  get outputs(): SetKawaiiRandomnessCall__Outputs {
    return new SetKawaiiRandomnessCall__Outputs(this);
  }
}

export class SetKawaiiRandomnessCall__Inputs {
  _call: SetKawaiiRandomnessCall;

  constructor(call: SetKawaiiRandomnessCall) {
    this._call = call;
  }

  get _kawaiiRandomness(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetKawaiiRandomnessCall__Outputs {
  _call: SetKawaiiRandomnessCall;

  constructor(call: SetKawaiiRandomnessCall) {
    this._call = call;
  }
}

export class SetKawaiiTokenCall extends ethereum.Call {
  get inputs(): SetKawaiiTokenCall__Inputs {
    return new SetKawaiiTokenCall__Inputs(this);
  }

  get outputs(): SetKawaiiTokenCall__Outputs {
    return new SetKawaiiTokenCall__Outputs(this);
  }
}

export class SetKawaiiTokenCall__Inputs {
  _call: SetKawaiiTokenCall;

  constructor(call: SetKawaiiTokenCall) {
    this._call = call;
  }

  get _kawaiiToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetKawaiiTokenCall__Outputs {
  _call: SetKawaiiTokenCall;

  constructor(call: SetKawaiiTokenCall) {
    this._call = call;
  }
}

export class SetMinMaxFeeCall extends ethereum.Call {
  get inputs(): SetMinMaxFeeCall__Inputs {
    return new SetMinMaxFeeCall__Inputs(this);
  }

  get outputs(): SetMinMaxFeeCall__Outputs {
    return new SetMinMaxFeeCall__Outputs(this);
  }
}

export class SetMinMaxFeeCall__Inputs {
  _call: SetMinMaxFeeCall;

  constructor(call: SetMinMaxFeeCall) {
    this._call = call;
  }

  get _minFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _maxFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMinMaxFeeCall__Outputs {
  _call: SetMinMaxFeeCall;

  constructor(call: SetMinMaxFeeCall) {
    this._call = call;
  }
}

export class SetSignerCall extends ethereum.Call {
  get inputs(): SetSignerCall__Inputs {
    return new SetSignerCall__Inputs(this);
  }

  get outputs(): SetSignerCall__Outputs {
    return new SetSignerCall__Outputs(this);
  }
}

export class SetSignerCall__Inputs {
  _call: SetSignerCall;

  constructor(call: SetSignerCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _result(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetSignerCall__Outputs {
  _call: SetSignerCall;

  constructor(call: SetSignerCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
